# Cheng Zi Ming
# TP064400
# Ang Zheng Wei
# TP064445
import datetime


def home():
    print("---------------------------------------------------------")
    print("Welcome To Apartment Rental Service")
    print("---------------------------------------------------------")

    print("\t[1] Admin \n\t[2] Customer Menu")

    while True:

        choice = input("Please select your option: ")
        if choice == '1':
            admin_login()

        elif choice == '2':
            customer_login_page()

        else:
            print("Invalid option")


def admin_login():
    print("---------------------------------------------------------")
    print("Welcome to Admin Page")
    print("---------------------------------------------------------")

    print("Please login to your account")

    print("Username: ")
    admin_username = input()
    print("Password: ")
    admin_password = input()

    if admin_username == 'david12' and admin_password == 'david23' \
            or admin_username == 'john12' and admin_password == 'john23':
        print("Login Successful")
        loglist = []
        current_time = datetime.datetime.now()
        login = current_time.strftime("%y-%m-%d %H:%M:%S")
        loglist.append(login)
        with open("logfile.txt", "a") as fhandler:
            for record in loglist:
                for item in record:
                    fhandler.write(item)
                fhandler.write("\n")
        fhandler.close()
        admin_homepage()

    else:
        print("Login Failed")
        print("Incorrect Username or Password")
        print("\n[1] Press 1 to Try Again \n[2]Press 2 to go back to Main Menu")

        while True:
            choice = input("Choose your Option: ")
            if choice == '1':
                admin_login()
            elif choice == '2':
                home()
            else:
                print("Invalid Option")


def admin_homepage():
    print("---------------------------------------------------------")
    print("Welcome to admin home page")
    print("---------------------------------------------------------")

    while True:
        print("Menu")
        print("[1]Add Details to Apartment or Customer")
        print("[2]View all records of Apartment or Customers")
        print("[3]Modify Apartment or CustomerDetails")
        print("[4]Search Apartment and customer record")
        print("[5]Delete Apartment or customer details")
        print("[0]Exit")

        choice = input("Please select your choice: ")

        if choice == '1':
            add()
        elif choice == '2':
            view()
        elif choice == '3':
            modify()
        elif choice == '4':
            search()
        elif choice == '5':
            delete()
        elif choice == '6':
            home()
            loglist = []
            end_time = datetime.datetime.now()
            logout = end_time.strftime("%y-%m-%d %H:%M:%S")
            loglist.append(logout)
            print(loglist)
            with open("logfile.txt", "a") as fhandler:
                for record in loglist:
                    for item in record:
                        fhandler.write(item)
                    fhandler.write("\n")
        else:
            print("Invalid Option")


def add():
    print("\n[1]Press 1 to add details to Apartment \n[2]Press 2 to add details to Customer \n[3]Press 3 to go back")

    choice = input("Choose your option: ")

    if choice == '1':
        add_apartment()

    elif choice == '2':
        add_tenant()   # not sure if needed or not

    elif choice == '3':
        admin_homepage()

    else:
        print("Invalid Option")
        add()


def add_apartment():
    apartmentrecord = []
    masterlist = []
    print("Please fill in the Apartment details")
    apartment_number = input("Apartment Number:")
    tenant_name = input("Tenant Name:")
    date_of_acquisition = input("Date of acquisition: ")
    square_footage = input("Square footage: ")
    expected_rent = input("Expected rent price: ")
    rental_history = input("Rental Histroy: ")

    apartmentrecord.append(apartment_number)
    apartmentrecord.append(tenant_name)
    apartmentrecord.append(date_of_acquisition)
    apartmentrecord.append(square_footage)
    apartmentrecord.append(expected_rent)
    apartmentrecord.append(rental_history)
    masterlist.append(apartmentrecord)

    with open("Apartment.txt", "a") as fhandler:
        for record in masterlist:
            for item in record:
                fhandler.write(item)
                fhandler.write(",")
            fhandler.write("\n")
    fhandler.close()

    print("[1]Press 1 to continue add apartment details")
    print("[2]Press 2 to go back to Admin Menu")

    while True:
        choice = input("select your choice:")

        if choice == '1':
            add_apartment()
        elif choice == '2':
            admin_homepage()
        else:
            print("Invalid Option")


def add_tenant():
    print("Add Tenant Details")

    print("Enter the following details")
    record = []
    tenantlist = []

    while True:
        tenantID = input("TenantID: ")
        if validateID(tenantID) != True:
            print(validateID(tenantID))
        else:
            record.append(tenantID)
            print(record)
            break

    fullname = input("Enter your full name: ")
    record.append(fullname)
    while True:
        ic = input("IC number: ")
        if validateic(ic) == True:
            record.append(ic)
            break
        else:
            print(validateic(ic))


    while True:
        dob = input("Enter your date of birth [dd/mm/yyyy]: ")
        if validatedob(dob) == True:
            record.append(dob)
            break
        else:
            print(validatedob(dob))

    while True:
        gender = input("Gender [M/F/O]")
        if validategender(gender) == True:
            record.append(gender)
            break
        else:
            print(validategender(gender))

    while True:
        phone_number = input("PhoneNumber:")
        if validateph(phone_number) == True:
            record.append(phone_number)
            break
        else:
            print(validateph(phone_number))


    while True:
        email = input("Email:")
        if validateemail(email) != True:
            print(validateemail(email))
        else:
            record.append(email)
            print(record)
            break

    while True:
        pob = input("Place of Birth:")
        if validatepob(pob) == True:
            record.append(pob)
            print(record)
            break
        else:
            print(validatepob(pob))

    work_history = input("Work History: ")
    record.append(work_history)

    current_employer = input("Current Employer: ")
    record.append(current_employer)

    income = input("Income: ")
    record.append(income)

    while True:
        username = input("Username: ")
        if validate_username(username) != True:
            print(validate_username(username))
        else:
            record.append(username)
            print(record)
            break

    while True:
        password = input("Password: ")
        if validate_userpassword(password) != True:
            print(validate_userpassword(password))
        else:
            record.append(password)
            print(record)
            break

    tenantlist.append(record)

    with open("CurrentTenantDetails.txt", "a") as fhandler:
        for record in tenantlist:
            for item in record:
                fhandler.write(item)
                fhandler.write(",")
            fhandler.write("\n")
    fhandler.close()

    print("[1]Press 1 to continue add apartment details")
    print("[2]Press 2 to go back to Admin Menu")


    while True:
        choice = input("select your choice:")

        if choice == '1':
            add_apartment()
        elif choice == '2':
            admin_homepage()
        else:
            print("Invalid Option")


def view():
    print("\n[1]Press 1 to view details of Apartment \n[2]Press 2 to view details of Tenant "
          "\n[3]Press 3 to View Past Tenant Details \n[4]Press 4 to go back")

    choice = input("Choose your option: ")

    if choice == '1':
        apartment_view()

    elif choice == '2':
        ctenant_view()

    elif choice == '3':
        ptenant_view()

    elif choice == '4':
        admin_homepage()

    else:
        print("Invalid Option")
        view()


def apartment_view():
    print("-------------------------------------------")
    print("Customer record")
    print("-------------------------------------------")

    record = 0
    with open("Apartment.txt", "r") as Apartment_file:
        for Apartment_record in Apartment_file:
            print("[", (record + 1), "]", Apartment_record.rstrip().rstrip(","))
            record += 1
    Apartment_file.close()

    while True:
        print("\n[1]Press 1 to view details of current tenant \n[2]Press 2 to view details of Past Tenant "
              "\n[3]Back to Admin homepage")

        choice = input("Choose your option: ")

        if choice == '1':
            ctenant_view()

        elif choice == '2':
            ptenant_view()

        elif choice == '3':
            admin_homepage()

        else:
            print("Invalid Option")

def ctenant_view():
    print("-------------------------------------------")
    print("Current Tenant record")
    print("-------------------------------------------")

    record = 0
    with open("CurrentTenantDetails.txt", "r") as Customer_file:
        for Customer_record in Customer_file:
            print("[", (record + 1), "]", Customer_record.rstrip().rstrip(","))
            record += 1
    Customer_file.close()

    while True:
        print("\n[1]Press 1 to view details of current tenant \n[2]Press 2 to view details of Past Tenant "
              "\n[3]Back to Admin homepage")

        choice = input("Choose your option: ")

        if choice == '1':
            ctenant_view()

        elif choice == '2':
            ptenant_view()

        elif choice == '3':
            admin_homepage()

        else:
            print("Invalid Option")

def ptenant_view():
    print("-------------------------------------------")
    print("Past Tenant record")
    print("-------------------------------------------")

    record = 0
    with open("CurrentTenantDetails.txt", "r") as Customer_file:
        for Customer_record in Customer_file:
            print("[", (record + 1), "]", Customer_record.rstrip().rstrip(","))
            record += 1
    Customer_file.close()

    print("\n[1] Back to admin menu \n[2] Exit to home page")

    while True:
        print("\n[1]Press 1 to view details of current tenant \n[2]Press 2 to view details of Past Tenant "
              "\n[3]Back to Admin homepage")

        choice = input("Choose your option: ")

        if choice == '1':
            ctenant_view()

        elif choice == '2':
            ptenant_view()

        elif choice == '3':
            admin_homepage()

        else:
            print("Invalid Option")


def modify():
    print("\n[1]Modify details of Apartment \n[2]Modify details of current tenant "
          "\n[3]Modify details of past tenant \n[4]Move Current Tenant to Past Tenant"
          "\n[5]Move Past Tenant to Current Tenant \n[6]Back to Admin Homepage")

    choice = input("Choose your option: ")

    if choice == '1':
        modify_apartment()

    elif choice == '2':
        modify_ctenant()

    elif choice == '3':
        modify_ptenant()

    elif choice == '4':
        admin_homepage()

    else:
        print("Invalid Option")
        modify()


def modify_apartment():
    apartment_file = open("Apartment.txt", "r")
    apartment_records = apartment_file.readlines()

    record = 0
    for line in apartment_records:
        print("[", (record + 1), "]", line.strip())
        record += 1

    record_num = int(input("Enter list number you wanted to edit: "))

    print("\n")
    apartment_details = apartment_records[record_num - 1].split(",")

    element = 0

    for record_element in apartment_details:
        print("[", (element + 1), "]", record_element)
        element += 1

    element_number = int(input("Enter element number you want to edit"))

    print("Current element value:", apartment_details[element_number - 1])

    new_element_value = input("Enter new element value ")

    apartment_details[element_number - 1] = new_element_value

    updated_record = ','.join(apartment_details)

    apartment_records[record_num - 1] = updated_record

    with open("Apartment.txt", "w") as file:
        file.writelines(apartment_records)

    print("Changes has been made")

    print("\n[1] Continue modify apartment details \n[2] Back to admin menu")

    while True:
        choice = input("Enter an option: ")

        if choice == '1':
            modify_apartment()

        elif choice == '2':
            admin_homepage()

        else:
            print("Invalid Option")


def modify_ctenant():
    customer_file = open("CurrentTenantDetails.txt", "r")
    customer_records = customer_file.readlines()

    record = 0
    for line in customer_records:
        print("[", (record + 1), "]", line.strip())
        record += 1

    record_num = int(input("Enter list number you wanted to edit: "))

    print("\n")
    customer_details = customer_records[record_num - 1].split(",")

    element = 0

    for record_element in customer_details:
        print("[", (element + 1), "]", record_element)
        element += 1

    element_number = int(input("Enter element number you want to edit"))

    print("Current element value:", customer_details[element_number - 1])

    new_element_value = input("Enter new element value ")

    customer_details[element_number - 1] = new_element_value

    updated_record = ','.join(customer_details)

    customer_records[record_num - 1] = updated_record

    with open("CurrentTenantDetails.txt", "w") as file:
        file.writelines(customer_records)

    print("Changes has been made")

    print("\n[1] Continue modify Customer details \n[2] Back to admin menu ")

    while True:
        choice = input("Enter an option: ")

        if choice == '1':
            modify_ctenant()

        elif choice == '2':
            admin_homepage()

        else:
            print("Invalid Option")


def modify_ptenant():
    customer_file = open("PastTenantDetails.txt", "r")
    customer_records = customer_file.readlines()

    record = 0
    for line in customer_records:
        print("[", (record + 1), "]", line.strip())
        record += 1

    record_num = int(input("Enter list number you wanted to edit: "))

    print("\n")
    customer_details = customer_records[record_num - 1].split(",")

    element = 0

    for record_element in customer_details:
        print("[", (element + 1), "]", record_element)
        element += 1

    element_number = int(input("Enter element number you want to edit"))

    print("Current element value:", customer_details[element_number - 1])

    new_element_value = input("Enter new element value ")

    customer_details[element_number - 1] = new_element_value

    updated_record = ','.join(customer_details)

    customer_records[record_num - 1] = updated_record

    with open("PastTenantDetails.txt", "w") as file:
        file.writelines(customer_records)

    print("Changes has been made")

    print("\n[1] Continue modify Customer details \n[2] Back to admin menu ")

    while True:
        choice = input("Enter an option: ")

        if choice == '1':
            modify_ptenant()

        elif choice == '2':
            admin_homepage()

        else:
            print("Invalid Option")


def Current_to_Past():
    customer_file = open("CurrentTenantDetails.txt", "r")
    customer_records = customer_file.readlines()

    record = 0
    for line in customer_records:
        print("[", (record + 1), "]", line.strip())
        record += 1

    record_num = int(input("Enter list number you wanted to edit: "))

    customer_details = customer_records[record_num - 1]
    while True:
        with open("PastTenantDetails.txt", "a") as fhandler:
            fhandler.write(customer_details)
            fhandler.write("\n")
        fhandler.close()

        del customer_records[record_num - 1]
        with open("CurrentTenantDetails.txt", "w") as file:
            for line in customer_records:
                file.write(line)

    while True:
        print("[1]Continue to move current tenant details \n[2] Move past tenant details to Current Tenant Details"
              "\n[3]Back to admin Homepage")

        choice = input("Choose an option: ")

        if choice == '1':
            Current_to_Past()

        elif choice == '2':
            Past_to_Current()

        elif choice == '3':
            admin_homepage()

        else:
            print("Invalid Option")

def Past_to_Current():
    customer_file = open("PastTenantDetails.txt", "r")
    customer_records = customer_file.readlines()

    record = 0
    for line in customer_records:
        print("[", (record + 1), "]", line.strip())
        record += 1

    record_num = int(input("Enter list number you wanted to edit: "))

    customer_details = customer_records[record_num - 1]
    while True:
        with open("CurrentTenantDetails.txt", "a") as fhandler:
            fhandler.write(customer_details)
            fhandler.write("\n")
        fhandler.close()

        del customer_records[record_num - 1]
        with open("PastTenantDetails.txt", "w") as file:
            for line in customer_records:
                file.write(line)

    while True:
        print("[1]Move Pass tenant details to Current Tenant Details"
              "\n[2]Move Current tenant details to Pass Tenant Details"
              "\n[3]Back to admin Homepage")

        choice = input("Choose an option: ")

        if choice == '1':
            Past_to_Current()

        elif choice == '2':
            Current_to_Past()

        elif choice == '3':
            admin_homepage()

        else:
            print("Invalid Option")

def search():
    print("\n[1]Press 1 to Search details of Apartment \n[2]Press 2 to search details of Customer "
          "\n[3]Press 3 to go back")

    choice = input("Choose your option: ")

    if choice == '1':
        search_apartment()

    elif choice == '2':
        search_ctenant()

    elif choice == '3':
        admin_homepage()

    else:
        print("Invalid Option")
        search()


def search_apartment():
    search_data = input("Please enter the keyword you want to search: ")

    apartment_file = open("Apartment.txt", "r")
    for apartmentnumber in apartment_file:
        if search_data in apartmentnumber:
            apartmentnumber = apartmentnumber.strip()
            value = apartmentnumber.split(",")

            if search_data == value[0]:
                print("-------------------------------------------------------")
                print("\nApartment Unit Number: ", value[0])
                print("\nDate of Acquisition: ", value[1])
                print("\nSquare Footage of Apartment: ", value[2])
                print("\nExpected Rental of the Apartment Unit: ", value[3])
                print("\nPreviously Rented Tenant: ", value[4])
                print("-------------------------------------------------------")

            elif search_data == value[1]:
                print("-------------------------------------------------------")
                print("\nApartment Unit Number: ", value[0])
                print("\nDate of Acquisition: ", value[1])
                print("\nSquare Footage of Apartment: ", value[2])
                print("\nExpected Rental of the Apartment Unit: ", value[3])
                print("\nPreviously Rented Tenant: ", value[4])
                print("-------------------------------------------------------")

            elif search_data == value[2]:
                print("Apartment Unit Number: ", value[0])
                print("Date of Acquisition: ", value[1])
                print("Square Footage of Apartment: ", value[2])
                print("Expected Rental of the Apartment Unit: ", value[3])
                print("Previously Rented Tenant: ", value[4])

            elif search_data == value[3]:
                print("Apartment Unit Number: ", value[0])
                print("Date of Acquisition: ", value[1])
                print("Square Footage of Apartment: ", value[2])
                print("Expected Rental of the Apartment Unit: ", value[3])
                print("Previously Rented Tenant: ", value[4])

            elif search_data == value[4]:
                print("Apartment Unit Number: ", value[0])
                print("Date of Acquisition: ", value[1])
                print("Square Footage of Apartment: ", value[2])
                print("Expected Rental of the Apartment Unit: ", value[3])
                print("Previously Rented Tenant: ", value[4])

            else:
                print("Apartment does not exist")

    while True:
        print("\n[1]Press 1 to continue search details of apartment \n[2]Press 2 to go back to admin home page ")

        choice = input("Choose your option: ")

        if choice == '1':
            search_apartment()

        elif choice == '2':
            admin_homepage()

        else:
            print("Invalid Option")

def search_ctenant():
    search_data = input("Please enter the keyword you want to search: ")

    tenant_file = open("CurrentTenantDetails.txt", "r")
    for tenantnumber in tenant_file:
        if search_data in tenantnumber:
            tenantnumber = tenantnumber.strip()
            value = tenantnumber.split(",")

            if search_data == value[0]:
                print("-------------------------------------------------------")
                print("\nApartment Unit Number: ", value[0])
                print("\nDate of Acquisition: ", value[1])
                print("\nSquare Footage of Apartment: ", value[2])
                print("\nExpected Rental of the Apartment Unit: ", value[3])
                print("\nPreviously Rented Tenant: ", value[4])
                print("-------------------------------------------------------")

            elif search_data == value[1]:
                print("-------------------------------------------------------")
                print("\nApartment Unit Number: ", value[0])
                print("\nDate of Acquisition: ", value[1])
                print("\nSquare Footage of Apartment: ", value[2])
                print("\nExpected Rental of the Apartment Unit: ", value[3])
                print("\nPreviously Rented Tenant: ", value[4])
                print("-------------------------------------------------------")

            elif search_data == value[2]:
                print("Apartment Unit Number: ", value[0])
                print("Date of Acquisition: ", value[1])
                print("Square Footage of Apartment: ", value[2])
                print("Expected Rental of the Apartment Unit: ", value[3])
                print("Previously Rented Tenant: ", value[4])

            elif search_data == value[3]:
                print("Apartment Unit Number: ", value[0])
                print("Date of Acquisition: ", value[1])
                print("Square Footage of Apartment: ", value[2])
                print("Expected Rental of the Apartment Unit: ", value[3])
                print("Previously Rented Tenant: ", value[4])

            elif search_data == value[4]:
                print("Apartment Unit Number: ", value[0])
                print("Date of Acquisition: ", value[1])
                print("Square Footage of Apartment: ", value[2])
                print("Expected Rental of the Apartment Unit: ", value[3])
                print("Previously Rented Tenant: ", value[4])

            else:
                print("Apartment does not exist")

    while True:
        print("\n[1]Press 1 to continue search details of current Tenant \n[2]Press 2 to go back to admin home page ")

        choice = input("Choose your option: ")

        if choice == '1':
            search_ctenant()

        elif choice == '2':
            admin_homepage()

        else:
            print("Invalid Option")


def delete():
    print("\n[1]Press 1 to delete details of Apartment \n[2]Press 2 to delete details of Customer "
          "\n[3]Press 3 to go back")

    choice = input("Choose your option: ")

    if choice == '1':
        delete_apartment()

    elif choice == '2':
        delete_tenant()

    elif choice == '3':
        admin_homepage()

    else:
        print("Invalid Option")
        delete()


def delete_apartment():
    apartment_file = open("Apartment.txt", "r")
    apartment_records = apartment_file.readlines()

    record = 0
    for line in apartment_records:
        print("[", (record + 1), "]", line.strip())
        record += 1

    delete_num = int(input("Enter list number you wanted to delete: "))

    if (delete_num <= len(apartment_records)):
        del apartment_records[delete_num-1]
        with open("Apartment.txt","w") as file:
            for line in apartment_records:
                file.write(line)

    else:
        print("Line not in file")
        print("There is only", len(apartment_records), "lines.")


    print("Changes has been made")

    print("\n[1] Continue delete apartment details \n[2] Back to admin menu ")

    while True:
        choice = input("Enter an option: ")

        if choice == '1':
            delete_apartment()

        elif choice == '2':
            admin_homepage()

        else:
            print("Invalid Option")



def delete_tenant():
    customer_file = open("CurrentTenantDetails.txt", "r")
    customer_records = customer_file.readlines()

    record = 0
    for line in customer_records:
        print("[", (record + 1), "]", line.strip())
        record += 1

    delete_num = int(input("Enter list number you wanted to delete: "))

    if (delete_num <= len(customer_records)):
        del customer_records[delete_num-1]
        with open("CurrentTenantDetails.txt", "w") as file:
            for line in customer_records:
                file.write(line)

    else:
        print("Line not in file")
        print("There is only", len(customer_records), "lines.")


    print("Changes has been made")

    print("\n[1] Continue delete tenant details \n[2] Back to admin menu")

    while True:
        choice = input("Enter an option: ")

        if choice == '1':
            delete_tenant()

        elif choice == '2':
            admin_homepage()

        else:
            print("Invalid Option")



def validateID(tenantID):
    tenant_file = open("LoginCredentials.txt", "r")
    for tenantdetails in tenant_file:
        tenantdetails = tenantdetails.strip()
        v = tenantdetails.split(',')
        if tenantID == v[0]:
            reason = 'ID already existed'
            return reason
        else:
            tenant_file.close()
            return True

def validateic(ic):
    numdigit = 0
    for num in ic:
        if num.isdigit():
            numdigit = numdigit + 1

    if numdigit <= 0:
        reason = 'IC must contain at least one number'
        return reason

    tenant_file = open("LoginCredentials.txt", "r")
    for tenantdetails in tenant_file:
        tenantdetails = tenantdetails.strip()
        v = tenantdetails.split(',')
        if ic == v[1]:
            reason = 'IC already existed'
            return reason
        else:
            tenant_file.close()
            return True


def validatedob(dob):

    day, month, year = dob.split('/')

    isvaliddate = True
    try:
        datetime.datetime(int(year), int(month), int(day))
    except ValueError:
        isvaliddate = False

    if isvaliddate:
        return True
    else:
        reason = "The date of birth is not valid"
        return reason


def validategender(gender):
    for r in gender:
        if r == 'M' or r == 'F' or r == 'O':
            return True
        else:
            reason = 'choose between [M/F/O]'
            return reason


def validateph(phone_number):
    numdigit = 0
    for c in phone_number:
        if c.isdigit():
            numdigit = numdigit + 1
            if numdigit <= 6:
                reason = 'phone number must have at least 6 digit'
                return reason
            else:
                return True


def validateemail(email):
    tenant_file = open("LoginCredentials.txt", "r")
    for tenantdetails in tenant_file:
        tenantdetails = tenantdetails.strip()
        v = tenantdetails.split(',')
        if email == v[1]:
            reason = 'Username already existed'
            return reason
        else:
            tenant_file.close()
            return True

def validatepob(pob):
    for num in pob:
        if num.isalpha():
            return True
        else:
            reason = 'Place of Birth cannot contain digit'
            return reason


def validate_username(username):
    numupper = 0
    for c in username:
        if c.isupper():
            numupper = numupper + 1

    if numupper <= 0:
        reason = 'username must contain at least one uppercase character'
        return reason

    numlower = 0
    for c in username:
        if c.islower():
            numlower = numlower + 1

    if numlower <= 0:
        reason = 'username must contain at least one lowercase character'
        return reason

    if len(username) < 8:
        reason = 'username must be greater than 8 characters'
        return reason

    numdigit = 0
    for c in username:
        if c.isdigit():
            numdigit = numdigit + 1

    if numdigit <= 0:
        reason = 'username must contain at least one number'
        return reason

    tenant_file = open("CurrentTenantDetails.txt", "r")
    for tenantdetails in tenant_file:
        tenantdetails = tenantdetails.strip()
        v = tenantdetails.split(',')
        if username == v[10]:
            reason = 'Username already existed'
            return reason
        else:
            tenant_file.close()
            return True


def validate_userpassword(password):
    numupper = 0
    for c in password:
        if c.isupper():
            numupper = numupper + 1

    if numupper <= 0:
        reason = 'password must contain at least one uppercase character'
        return reason

    numlower = 0
    for c in password:
        if c.islower():
            numlower = numlower + 1

    if numlower <= 0:
        reason = 'password must contain at least one lowercase character'
        return reason

    if len(password) < 8:
        reason = 'password must be greater than 8 characters'
        return reason

    numdigit = 0
    for c in password:
        if c.isdigit():
            numdigit = numdigit + 1

    if numdigit <= 0:
        reason = 'password must contain at least one number'
        return reason

    else:
        return True

home()
